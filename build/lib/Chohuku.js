// Generated by CoffeeScript 1.10.0
(function() {
  var Chohuku, GRAY_SCALE_DIR, GraphicsMagickClient, IMAGES_DIR, RESIZE_DIR, RESIZE_PX, chalk, compare, fs, graphicsMagickClient, path, phash;

  chalk = require('chalk');

  fs = require('fs');

  compare = require('hamming-distance');

  path = require('path');

  phash = require('phash-image');

  GraphicsMagickClient = require(path.resolve(__dirname, 'GraphicsMagickClient'));

  graphicsMagickClient = new GraphicsMagickClient();

  RESIZE_PX = 16;

  IMAGES_DIR = path.resolve(__dirname, '..', '..', '_images');

  RESIZE_DIR = IMAGES_DIR + "/resize";

  GRAY_SCALE_DIR = IMAGES_DIR + "/grayscale";

  module.exports = Chohuku = (function() {
    function Chohuku(imagePath) {
      this.imagePath = imagePath;
      this.imageFilename = this.imagePath.split('/').pop();
      this.generateDir();
    }

    Chohuku.prototype.generateDir = function() {
      fs.existsSync(RESIZE_DIR) || fs.mkdirSync(RESIZE_DIR);
      return fs.existsSync(GRAY_SCALE_DIR) || fs.mkdirSync(GRAY_SCALE_DIR);
    };

    Chohuku.prototype.resize = function() {
      var resizeParams;
      resizeParams = {
        source: this.imagePath,
        output: RESIZE_DIR + "/" + this.imageFilename,
        width: RESIZE_PX,
        height: RESIZE_PX
      };
      return graphicsMagickClient.resize(resizeParams);
    };

    Chohuku.prototype.grayscalize = function() {
      var typeParams;
      typeParams = {
        source: RESIZE_DIR + "/" + this.imageFilename,
        output: GRAY_SCALE_DIR + "/" + this.imageFilename,
        type: 'Grayscale'
      };
      return graphicsMagickClient.type(typeParams);
    };

    Chohuku.prototype.mh = function() {
      return phash.mh(GRAY_SCALE_DIR + "/" + this.imageFilename);
    };

    Chohuku.prototype.pHash = function(ulong64Flag) {
      if (ulong64Flag == null) {
        ulong64Flag = false;
      }
      return phash(GRAY_SCALE_DIR + "/" + this.imageFilename, ulong64Flag);
    };

    Chohuku.prototype.getPHash = function(ulong64Flag) {
      return this.resize().then((function(_this) {
        return function(resizeResult) {
          return _this.grayscalize();
        };
      })(this)).then((function(_this) {
        return function(grayScaleResult) {
          return _this.pHash(ulong64Flag);
        };
      })(this))["catch"](function(err) {
        return console.error(chalk.red(err));
      });
    };

    Chohuku.prototype.getMH = function() {
      return this.resize().then((function(_this) {
        return function(resizeResult) {
          return _this.grayscalize();
        };
      })(this)).then((function(_this) {
        return function(grayScaleResult) {
          return _this.mh();
        };
      })(this))["catch"](function(err) {
        return console.error(chalk.red(err));
      });
    };

    return Chohuku;

  })();

}).call(this);
